Help on module ntpath:

NAME
    ntpath - Common pathname manipulations, WindowsNT/95 version.

DESCRIPTION
    Instead of importing this module directly, import os and refer to this
    module as os.path.

FUNCTIONS
    abspath(path)
        Return the absolute version of a path.
    
    basename(p)
        Returns the final component of a pathname
    
    commonpath(paths)
        Given a sequence of path names, returns the longest common sub-path.
    
    commonprefix(m)
        Given a list of pathnames, returns the longest common leading component
    
    dirname(p)
        Returns the directory component of a pathname
    
    exists(path)
        Test whether a path exists.  Returns False for broken symbolic links
    
    expanduser(path)
        Expand ~ and ~user constructs.
        
        If user or $HOME is unknown, do nothing.
    
    expandvars(path)
        Expand shell variables of the forms $var, ${var} and %var%.
        
        Unknown variables are left unchanged.
    
    getatime(filename)
        Return the last access time of a file, reported by os.stat().
    
    getctime(filename)
        Return the metadata change time of a file, reported by os.stat().
    
    getmtime(filename)
        Return the last modification time of a file, reported by os.stat().
    
    getsize(filename)
        Return the size of a file, reported by os.stat().
    
    isabs(s)
        Test whether a path is absolute
    
    isdir = _isdir(path, /)
        Return true if the pathname refers to an existing directory.
    
    isfile(path)
        Test whether a path is a regular file
    
    islink(path)
        Test whether a path is a symbolic link.
        This will always return false for Windows prior to 6.0.
    
    ismount(path)
        Test whether a path is a mount point (a drive root, the root of a
        share, or a mounted volume)
    
    join(path, *paths)
        # Join two (or more) paths.
    
    lexists(path)
        Test whether a path exists.  Returns True for broken symbolic links
    
    normcase(s)
        Normalize case of pathname.
        
        Makes all characters lowercase and all slashes into backslashes.
    
    normpath(path)
        Normalize path, eliminating double slashes, etc.
    
    realpath = abspath(path)
        Return the absolute version of a path.
    
    relpath(path, start=None)
        Return a relative version of a path
    
    samefile(f1, f2)
        Test whether two pathnames reference the same actual file
    
    sameopenfile(fp1, fp2)
        Test whether two open file objects reference the same file
    
    samestat(s1, s2)
        Test whether two stat buffers reference the same file
    
    split(p)
        Split a pathname.
        
        Return tuple (head, tail) where tail is everything after the final slash.
        Either part may be empty.
    
    splitdrive(p)
        Split a pathname into drive/UNC sharepoint and relative path specifiers.
        Returns a 2-tuple (drive_or_unc, path); either part may be empty.
        
        If you assign
            result = splitdrive(p)
        It is always true that:
            result[0] + result[1] == p
        
        If the path contained a drive letter, drive_or_unc will contain everything
        up to and including the colon.  e.g. splitdrive("c:/dir") returns ("c:", "/dir")
        
        If the path contained a UNC path, the drive_or_unc will contain the host name
        and share up to but not including the fourth directory separator character.
        e.g. splitdrive("//host/computer/dir") returns ("//host/computer", "/dir")
        
        Paths cannot contain both a drive letter and a UNC path.
    
    splitext(p)
        Split the extension from a pathname.
        
        Extension is everything from the last dot to the end, ignoring
        leading dots.  Returns "(root, ext)"; ext may be empty.

DATA
    __all__ = ['normcase', 'isabs', 'join', 'splitdrive', 'split', 'splite...
    altsep = '/'
    curdir = '.'
    defpath = r'.;C:\bin'
    devnull = 'nul'
    extsep = '.'
    pardir = '..'
    pathsep = ';'
    sep = r'\'
    supports_unicode_filenames = True

FILE
    c:\program files\python37\lib\ntpath.py


