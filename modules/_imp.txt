Help on built-in module _imp:

NAME
    _imp - (Extremely) low-level import machinery bits as used by importlib and imp.

FUNCTIONS
    acquire_lock()
        Acquires the interpreter's import lock for the current thread.
        
        This lock should be used by import hooks to ensure thread-safety when importing
        modules. On platforms without threads, this function does nothing.
    
    create_builtin(spec, /)
        Create an extension module.
    
    create_dynamic(spec, file=None, /)
        Create an extension module.
    
    exec_builtin(mod, /)
        Initialize a built-in module.
    
    exec_dynamic(mod, /)
        Initialize an extension module.
    
    extension_suffixes()
        Returns the list of file suffixes used to identify extension modules.
    
    get_frozen_object(name, /)
        Create a code object for a frozen module.
    
    init_frozen(name, /)
        Initializes a frozen module.
    
    is_builtin(name, /)
        Returns True if the module name corresponds to a built-in module.
    
    is_frozen(name, /)
        Returns True if the module name corresponds to a frozen module.
    
    is_frozen_package(name, /)
        Returns True if the module name is of a frozen package.
    
    lock_held()
        Return True if the import lock is currently held, else False.
        
        On platforms without threads, return False.
    
    release_lock()
        Release the interpreter's import lock.
        
        On platforms without threads, this function does nothing.
    
    source_hash(key, source)

DATA
    check_hash_based_pycs = 'default'

FILE
    (built-in)


