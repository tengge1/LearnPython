Help on built-in module audioop:

NAME
    audioop

CLASSES
    builtins.Exception(builtins.BaseException)
        error
    
    class error(builtins.Exception)
     |  Common base class for all non-exit exceptions.
     |  
     |  Method resolution order:
     |      error
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from builtins.Exception:
     |  
     |  __new__(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  __delattr__(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  __getattribute__(self, name, /)
     |      Return getattr(self, name).
     |  
     |  __reduce__(...)
     |      Helper for pickle.
     |  
     |  __repr__(self, /)
     |      Return repr(self).
     |  
     |  __setattr__(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  __setstate__(...)
     |  
     |  __str__(self, /)
     |      Return str(self).
     |  
     |  with_traceback(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  __cause__
     |      exception cause
     |  
     |  __context__
     |      exception context
     |  
     |  __dict__
     |  
     |  __suppress_context__
     |  
     |  __traceback__
     |  
     |  args

FUNCTIONS
    add(fragment1, fragment2, width, /)
        Return a fragment which is the addition of the two samples passed as parameters.
    
    adpcm2lin(fragment, width, state, /)
        Decode an Intel/DVI ADPCM coded fragment to a linear fragment.
    
    alaw2lin(fragment, width, /)
        Convert sound fragments in a-LAW encoding to linearly encoded sound fragments.
    
    avg(fragment, width, /)
        Return the average over all samples in the fragment.
    
    avgpp(fragment, width, /)
        Return the average peak-peak value over all samples in the fragment.
    
    bias(fragment, width, bias, /)
        Return a fragment that is the original fragment with a bias added to each sample.
    
    byteswap(fragment, width, /)
        Convert big-endian samples to little-endian and vice versa.
    
    cross(fragment, width, /)
        Return the number of zero crossings in the fragment passed as an argument.
    
    findfactor(fragment, reference, /)
        Return a factor F such that rms(add(fragment, mul(reference, -F))) is minimal.
    
    findfit(fragment, reference, /)
        Try to match reference as well as possible to a portion of fragment.
    
    findmax(fragment, length, /)
        Search fragment for a slice of specified number of samples with maximum energy.
    
    getsample(fragment, width, index, /)
        Return the value of sample index from the fragment.
    
    lin2adpcm(fragment, width, state, /)
        Convert samples to 4 bit Intel/DVI ADPCM encoding.
    
    lin2alaw(fragment, width, /)
        Convert samples in the audio fragment to a-LAW encoding.
    
    lin2lin(fragment, width, newwidth, /)
        Convert samples between 1-, 2-, 3- and 4-byte formats.
    
    lin2ulaw(fragment, width, /)
        Convert samples in the audio fragment to u-LAW encoding.
    
    max(fragment, width, /)
        Return the maximum of the absolute value of all samples in a fragment.
    
    maxpp(fragment, width, /)
        Return the maximum peak-peak value in the sound fragment.
    
    minmax(fragment, width, /)
        Return the minimum and maximum values of all samples in the sound fragment.
    
    mul(fragment, width, factor, /)
        Return a fragment that has all samples in the original fragment multiplied by the floating-point value factor.
    
    ratecv(fragment, width, nchannels, inrate, outrate, state, weightA=1, weightB=0, /)
        Convert the frame rate of the input fragment.
    
    reverse(fragment, width, /)
        Reverse the samples in a fragment and returns the modified fragment.
    
    rms(fragment, width, /)
        Return the root-mean-square of the fragment, i.e. sqrt(sum(S_i^2)/n).
    
    tomono(fragment, width, lfactor, rfactor, /)
        Convert a stereo fragment to a mono fragment.
    
    tostereo(fragment, width, lfactor, rfactor, /)
        Generate a stereo fragment from a mono fragment.
    
    ulaw2lin(fragment, width, /)
        Convert sound fragments in u-LAW encoding to linearly encoded sound fragments.

FILE
    (built-in)


