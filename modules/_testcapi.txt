Help on module _testcapi:

NAME
    _testcapi

CLASSES
    builtins.Exception(builtins.BaseException)
        error
    
    class error(builtins.Exception)
     |  Common base class for all non-exit exceptions.
     |  
     |  Method resolution order:
     |      error
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from builtins.Exception:
     |  
     |  __new__(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  __delattr__(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  __getattribute__(self, name, /)
     |      Return getattr(self, name).
     |  
     |  __reduce__(...)
     |      Helper for pickle.
     |  
     |  __repr__(self, /)
     |      Return repr(self).
     |  
     |  __setattr__(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  __setstate__(...)
     |  
     |  __str__(self, /)
     |      Return str(self).
     |  
     |  with_traceback(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  __cause__
     |      exception cause
     |  
     |  __context__
     |      exception context
     |  
     |  __dict__
     |  
     |  __suppress_context__
     |  
     |  __traceback__
     |  
     |  args

FUNCTIONS
    PyTime_AsMicroseconds(...)
    
    PyTime_AsMilliseconds(...)
    
    PyTime_AsSecondsDouble(...)
    
    PyTime_AsTimeval(...)
    
    PyTime_FromSeconds(...)
    
    PyTime_FromSecondsObject(...)
    
    argparsing(...)
    
    call_in_temporary_c_thread(...)
        set_error_class(error_class) -> None
    
    code_newempty(...)
    
    codec_incrementaldecoder(...)
    
    codec_incrementalencoder(...)
    
    crash_no_current_thread(...)
    
    create_cfunction(...)
    
    datetime_check_date(...)
    
    datetime_check_datetime(...)
    
    datetime_check_delta(...)
    
    datetime_check_time(...)
    
    datetime_check_tzinfo(...)
    
    dict_get_version(...)
    
    dict_getitem_knownhash(...)
    
    dict_hassplittable(...)
    
    docstring_empty(...)
    
    docstring_no_signature(...)
        This docstring has no signature.
    
    docstring_with_invalid_signature(...)
        docstring_with_invalid_signature($module, /, boo)
        
        This docstring has an invalid signature.
    
    docstring_with_invalid_signature2(...)
        docstring_with_invalid_signature2($module, /, boo)
        
        --
        
        This docstring also has an invalid signature.
    
    docstring_with_signature(sig)
        This docstring has a valid signature.
    
    docstring_with_signature_and_extra_newlines(parameter)
        This docstring has a valid signature and some extra newlines.
    
    docstring_with_signature_but_no_doc(sig)
    
    docstring_with_signature_with_defaults(module, s='avocado', b=b'bytes', d=3.14, i=35, n=None, t=True, f=False, local=3, sys=9223372036854775807)
        This docstring has a valid signature with parameters,
        and the parameters take defaults of varying types.
    
    exception_print(...)
    
    get_args(...)
    
    get_core_config(...)
    
    get_global_config(...)
    
    get_kwargs(...)
    
    get_main_config(...)
    
    get_mapping_items(...)
    
    get_mapping_keys(...)
    
    get_mapping_values(...)
    
    get_recursion_depth(...)
    
    get_timezone_utc_capi(...)
    
    get_timezones_offset_zero(...)
    
    getargs_B(...)
    
    getargs_C(...)
    
    getargs_D(...)
    
    getargs_H(...)
    
    getargs_I(...)
    
    getargs_K(...)
    
    getargs_L(...)
    
    getargs_S(...)
    
    getargs_U(...)
    
    getargs_Y(...)
    
    getargs_Z(...)
    
    getargs_Z_hash(...)
    
    getargs_b(...)
    
    getargs_c(...)
    
    getargs_d(...)
    
    getargs_es(...)
    
    getargs_es_hash(...)
    
    getargs_et(...)
    
    getargs_et_hash(...)
    
    getargs_f(...)
    
    getargs_h(...)
    
    getargs_i(...)
    
    getargs_k(...)
    
    getargs_keyword_only(...)
    
    getargs_keywords(...)
    
    getargs_l(...)
    
    getargs_n(...)
    
    getargs_p(...)
    
    getargs_positional_only_and_keywords(...)
    
    getargs_s(...)
    
    getargs_s_hash(...)
    
    getargs_s_star(...)
    
    getargs_tuple(...)
    
    getargs_u(...)
    
    getargs_u_hash(...)
    
    getargs_w_star(...)
    
    getargs_y(...)
    
    getargs_y_hash(...)
    
    getargs_y_star(...)
    
    getargs_z(...)
    
    getargs_z_hash(...)
    
    getargs_z_star(...)
    
    getbuffer_with_null_view(...)
    
    hamt(...)
    
    make_exception_with_doc(...)
    
    make_memoryview_from_NULL_pointer(...)
    
    make_timezones_capi(...)
    
    no_docstring(...)
    
    parse_tuple_and_keywords(...)
    
    pymarshal_read_last_object_from_file(...)
    
    pymarshal_read_long_from_file(...)
    
    pymarshal_read_object_from_file(...)
    
    pymarshal_read_short_from_file(...)
    
    pymarshal_write_long_to_file(...)
    
    pymarshal_write_object_to_file(...)
    
    pymem_api_misuse(...)
    
    pymem_buffer_overflow(...)
    
    pymem_getallocatorsname(...)
    
    pymem_malloc_without_gil(...)
    
    pyobject_fastcall(...)
    
    pyobject_fastcalldict(...)
    
    pyobject_fastcallkeywords(...)
    
    pyobject_forbidden_bytes(...)
    
    pyobject_freed(...)
    
    pyobject_is_freed(...)
    
    pyobject_malloc_without_gil(...)
    
    pyobject_uninitialized(...)
    
    pytime_object_to_time_t(...)
    
    pytime_object_to_timespec(...)
    
    pytime_object_to_timeval(...)
    
    raise_SIGINT_then_send_None(...)
    
    raise_exception(...)
    
    raise_memoryerror(...)
    
    raise_signal(...)
    
    remove_mem_hooks(...)
        Remove memory hooks.
    
    return_null_without_error(...)
    
    return_result_with_error(...)
    
    run_in_subinterp(...)
    
    set_errno(...)
    
    set_exc_info(...)
    
    set_nomemory(...)
        set_nomemory(start:int, stop:int = 0)
    
    stack_pointer(...)
    
    test_L_code(...)
    
    test_Z_code(...)
    
    test_buildvalue_N(...)
    
    test_capsule(...)
    
    test_config(...)
    
    test_datetime_capi(...)
    
    test_decref_doesnt_leak(...)
    
    test_dict_iteration(...)
    
    test_empty_argparse(...)
    
    test_from_contiguous(...)
    
    test_incref_decref_API(...)
    
    test_incref_doesnt_leak(...)
    
    test_k_code(...)
    
    test_lazy_hash_inheritance(...)
    
    test_list_api(...)
    
    test_long_and_overflow(...)
    
    test_long_api(...)
    
    test_long_as_double(...)
    
    test_long_as_size_t(...)
    
    test_long_as_unsigned_long_long_mask(...)
    
    test_long_long_and_overflow(...)
    
    test_long_numbits(...)
    
    test_longlong_api(...)
    
    test_null_strings(...)
    
    test_pymem_alloc0(...)
    
    test_pymem_setallocators(...)
    
    test_pymem_setrawallocators(...)
    
    test_pyobject_setallocators(...)
    
    test_pythread_tss_key_state(...)
    
    test_s_code(...)
    
    test_sizeof_c_types(...)
    
    test_string_from_format(...)
    
    test_string_to_double(...)
    
    test_u_code(...)
    
    test_unicode_compare_with_ascii(...)
    
    test_widechar(...)
    
    test_with_docstring(...)
        This is a pretty normal docstring.
    
    test_xdecref_doesnt_leak(...)
    
    test_xincref_doesnt_leak(...)
    
    traceback_print(...)
    
    tracemalloc_get_traceback(...)
    
    tracemalloc_track(...)
    
    tracemalloc_untrack(...)
    
    unicode_asucs4(...)
    
    unicode_aswidechar(...)
    
    unicode_aswidecharstring(...)
    
    unicode_copycharacters(...)
    
    unicode_encodedecimal(...)
    
    unicode_findchar(...)
    
    unicode_legacy_string(...)
    
    unicode_transformdecimaltoascii(...)
    
    with_tp_del(...)

DATA
    CHAR_MAX = 127
    CHAR_MIN = -128
    DBL_MAX = 1.7976931348623157e+308
    DBL_MIN = 2.2250738585072014e-308
    FLT_MAX = 3.4028234663852886e+38
    FLT_MIN = 1.1754943508222875e-38
    INT_MAX = 2147483647
    INT_MIN = -2147483648
    LLONG_MAX = 9223372036854775807
    LLONG_MIN = -9223372036854775808
    LONG_MAX = 2147483647
    LONG_MIN = -2147483648
    PY_SSIZE_T_MAX = 9223372036854775807
    PY_SSIZE_T_MIN = -9223372036854775808
    SHRT_MAX = 32767
    SHRT_MIN = -32768
    SIZEOF_PYGC_HEAD = 24
    SIZEOF_TIME_T = 8
    UCHAR_MAX = 255
    UINT_MAX = 4294967295
    ULLONG_MAX = 18446744073709551615
    ULONG_MAX = 4294967295
    USHRT_MAX = 65535
    WITH_PYMALLOC = True
    the_number_three = 3

FILE
    c:\program files\python37\dlls\_testcapi.pyd


